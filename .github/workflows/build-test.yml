name: Build Only (Test)

on:
  push:
    tags: ['test-*']

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libarchive-tools
          sudo apt-get install -y ruby-dev build-essential
          sudo gem install --no-document fpm

      - name: Build application
        run: npm run build

      - name: Build Distributables (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build && npx electron-builder --win --publish never

      - name: Build Distributables (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build && npx electron-builder --mac --publish never

      - name: Build Distributables (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build && npx electron-builder --linux --publish never

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/*.exe

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/*.dmg

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: |
            dist/*.AppImage
            dist/*.deb